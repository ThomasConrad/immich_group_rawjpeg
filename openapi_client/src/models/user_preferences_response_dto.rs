/*
 * Immich
 *
 * Immich API
 *
 * The version of the OpenAPI document: 1.111.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct UserPreferencesResponseDto {
    #[serde(rename = "avatar")]
    pub avatar: Box<models::AvatarResponse>,
    #[serde(rename = "download")]
    pub download: Box<models::DownloadResponse>,
    #[serde(rename = "emailNotifications")]
    pub email_notifications: Box<models::EmailNotificationsResponse>,
    #[serde(rename = "memories")]
    pub memories: Box<models::MemoryResponse>,
    #[serde(rename = "purchase")]
    pub purchase: Box<models::PurchaseResponse>,
}

impl UserPreferencesResponseDto {
    pub fn new(avatar: models::AvatarResponse, download: models::DownloadResponse, email_notifications: models::EmailNotificationsResponse, memories: models::MemoryResponse, purchase: models::PurchaseResponse) -> UserPreferencesResponseDto {
        UserPreferencesResponseDto {
            avatar: Box::new(avatar),
            download: Box::new(download),
            email_notifications: Box::new(email_notifications),
            memories: Box::new(memories),
            purchase: Box::new(purchase),
        }
    }
}

