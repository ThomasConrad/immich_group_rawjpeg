/*
 * Immich
 *
 * Immich API
 *
 * The version of the OpenAPI document: 1.113.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct UserPreferencesUpdateDto {
    #[serde(rename = "avatar", skip_serializing_if = "Option::is_none")]
    pub avatar: Option<Box<models::AvatarUpdate>>,
    #[serde(rename = "download", skip_serializing_if = "Option::is_none")]
    pub download: Option<Box<models::DownloadUpdate>>,
    #[serde(rename = "emailNotifications", skip_serializing_if = "Option::is_none")]
    pub email_notifications: Option<Box<models::EmailNotificationsUpdate>>,
    #[serde(rename = "folders", skip_serializing_if = "Option::is_none")]
    pub folders: Option<Box<models::FoldersUpdate>>,
    #[serde(rename = "memories", skip_serializing_if = "Option::is_none")]
    pub memories: Option<Box<models::MemoriesUpdate>>,
    #[serde(rename = "people", skip_serializing_if = "Option::is_none")]
    pub people: Option<Box<models::PeopleUpdate>>,
    #[serde(rename = "purchase", skip_serializing_if = "Option::is_none")]
    pub purchase: Option<Box<models::PurchaseUpdate>>,
    #[serde(rename = "ratings", skip_serializing_if = "Option::is_none")]
    pub ratings: Option<Box<models::RatingsUpdate>>,
    #[serde(rename = "tags", skip_serializing_if = "Option::is_none")]
    pub tags: Option<Box<models::TagsUpdate>>,
}

impl UserPreferencesUpdateDto {
    pub fn new() -> UserPreferencesUpdateDto {
        UserPreferencesUpdateDto {
            avatar: None,
            download: None,
            email_notifications: None,
            folders: None,
            memories: None,
            people: None,
            purchase: None,
            ratings: None,
            tags: None,
        }
    }
}

